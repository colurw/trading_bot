/*
 * BitMEX API
 *
 * ## REST API for the BitMEX Trading Platform  _If you are building automated tools, please subscribe to the_ _[BitMEX API RSS Feed](https://blog.bitmex.com/api_announcement/feed/) for changes. The feed will be updated_ _regularly and is the most reliable way to get downtime and update announcements._  [View Changelog](/app/apiChangelog)  -  #### Getting Started  Base URI: [https://www.bitmex.com/api/v1](/api/v1)  ##### Fetching Data  All REST endpoints are documented below. You can try out any query right from this interface.  Most table queries accept `count`, `start`, and `reverse` params. Set `reverse=true` to get rows newest-first.  Additional documentation regarding filters, timestamps, and authentication is available in [the main API documentation](/app/restAPI).  _All_ table data is available via the [Websocket](/app/wsAPI). We highly recommend using the socket if you want to have the quickest possible data without being subject to ratelimits.  ##### Return Types  By default, all data is returned as JSON. Send `?_format=csv` to get CSV data or `?_format=xml` to get XML data.  ##### Trade Data Queries  _This is only a small subset of what is available, to get you started._  Fill in the parameters and click the `Try it out!` button to try any of these queries.  - [Pricing Data](#!/Quote/Quote_get)  - [Trade Data](#!/Trade/Trade_get)  - [OrderBook Data](#!/OrderBook/OrderBook_getL2)  - [Settlement Data](#!/Settlement/Settlement_get)  - [Exchange Statistics](#!/Stats/Stats_history)  Every function of the BitMEX.com platform is exposed here and documented. Many more functions are available.  ##### Swagger Specification  [â‡© Download Swagger JSON](swagger.json)  -  ## All API Endpoints  Click to expand a section. 
 *
 * API version: 1.2.0
 * Contact: support@bitmex.com
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

import (
	"time"
)

type Margin struct {
	Account int64 `json:"account"`
	Currency string `json:"currency"`
	RiskLimit int64 `json:"riskLimit,omitempty"`
	State string `json:"state,omitempty"`
	Amount int64 `json:"amount,omitempty"`
	PrevRealisedPnl int64 `json:"prevRealisedPnl,omitempty"`
	GrossComm int64 `json:"grossComm,omitempty"`
	GrossOpenCost int64 `json:"grossOpenCost,omitempty"`
	GrossOpenPremium int64 `json:"grossOpenPremium,omitempty"`
	GrossExecCost int64 `json:"grossExecCost,omitempty"`
	GrossMarkValue int64 `json:"grossMarkValue,omitempty"`
	RiskValue int64 `json:"riskValue,omitempty"`
	InitMargin int64 `json:"initMargin,omitempty"`
	MaintMargin int64 `json:"maintMargin,omitempty"`
	TargetExcessMargin int64 `json:"targetExcessMargin,omitempty"`
	RealisedPnl int64 `json:"realisedPnl,omitempty"`
	UnrealisedPnl int64 `json:"unrealisedPnl,omitempty"`
	WalletBalance int64 `json:"walletBalance,omitempty"`
	MarginBalance int64 `json:"marginBalance,omitempty"`
	MarginLeverage float64 `json:"marginLeverage,omitempty"`
	MarginUsedPcnt float64 `json:"marginUsedPcnt,omitempty"`
	ExcessMargin int64 `json:"excessMargin,omitempty"`
	AvailableMargin int64 `json:"availableMargin,omitempty"`
	WithdrawableMargin int64 `json:"withdrawableMargin,omitempty"`
	MakerFeeDiscount float64 `json:"makerFeeDiscount,omitempty"`
	TakerFeeDiscount float64 `json:"takerFeeDiscount,omitempty"`
	Timestamp time.Time `json:"timestamp,omitempty"`
}
