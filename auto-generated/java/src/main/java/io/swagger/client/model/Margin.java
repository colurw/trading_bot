/*
 * BitMEX API
 * ## REST API for the BitMEX Trading Platform  _If you are building automated tools, please subscribe to the_ _[BitMEX API RSS Feed](https://blog.bitmex.com/api_announcement/feed/) for changes. The feed will be updated_ _regularly and is the most reliable way to get downtime and update announcements._  [View Changelog](/app/apiChangelog)  -  #### Getting Started  Base URI: [https://www.bitmex.com/api/v1](/api/v1)  ##### Fetching Data  All REST endpoints are documented below. You can try out any query right from this interface.  Most table queries accept `count`, `start`, and `reverse` params. Set `reverse=true` to get rows newest-first.  Additional documentation regarding filters, timestamps, and authentication is available in [the main API documentation](/app/restAPI).  _All_ table data is available via the [Websocket](/app/wsAPI). We highly recommend using the socket if you want to have the quickest possible data without being subject to ratelimits.  ##### Return Types  By default, all data is returned as JSON. Send `?_format=csv` to get CSV data or `?_format=xml` to get XML data.  ##### Trade Data Queries  _This is only a small subset of what is available, to get you started._  Fill in the parameters and click the `Try it out!` button to try any of these queries.  - [Pricing Data](#!/Quote/Quote_get)  - [Trade Data](#!/Trade/Trade_get)  - [OrderBook Data](#!/OrderBook/OrderBook_getL2)  - [Settlement Data](#!/Settlement/Settlement_get)  - [Exchange Statistics](#!/Stats/Stats_history)  Every function of the BitMEX.com platform is exposed here and documented. Many more functions are available.  ##### Swagger Specification  [â‡© Download Swagger JSON](swagger.json)  -  ## All API Endpoints  Click to expand a section. 
 *
 * OpenAPI spec version: 1.2.0
 * Contact: support@bitmex.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * Margin
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-05-28T18:24:26.857+08:00")
public class Margin {
  @SerializedName("account")
  private Long account = 0l;

  @SerializedName("currency")
  private String currency = null;

  @SerializedName("riskLimit")
  private Long riskLimit = 0l;

  @SerializedName("state")
  private String state = null;

  @SerializedName("amount")
  private Long amount = 0l;

  @SerializedName("prevRealisedPnl")
  private Long prevRealisedPnl = 0l;

  @SerializedName("grossComm")
  private Long grossComm = 0l;

  @SerializedName("grossOpenCost")
  private Long grossOpenCost = 0l;

  @SerializedName("grossOpenPremium")
  private Long grossOpenPremium = 0l;

  @SerializedName("grossExecCost")
  private Long grossExecCost = 0l;

  @SerializedName("grossMarkValue")
  private Long grossMarkValue = 0l;

  @SerializedName("riskValue")
  private Long riskValue = 0l;

  @SerializedName("initMargin")
  private Long initMargin = 0l;

  @SerializedName("maintMargin")
  private Long maintMargin = 0l;

  @SerializedName("targetExcessMargin")
  private Long targetExcessMargin = 0l;

  @SerializedName("realisedPnl")
  private Long realisedPnl = 0l;

  @SerializedName("unrealisedPnl")
  private Long unrealisedPnl = 0l;

  @SerializedName("walletBalance")
  private Long walletBalance = 0l;

  @SerializedName("marginBalance")
  private Long marginBalance = 0l;

  @SerializedName("marginLeverage")
  private Double marginLeverage = 0.0d;

  @SerializedName("marginUsedPcnt")
  private Double marginUsedPcnt = 0.0d;

  @SerializedName("excessMargin")
  private Long excessMargin = 0l;

  @SerializedName("availableMargin")
  private Long availableMargin = 0l;

  @SerializedName("withdrawableMargin")
  private Long withdrawableMargin = 0l;

  @SerializedName("makerFeeDiscount")
  private Double makerFeeDiscount = 0.0d;

  @SerializedName("takerFeeDiscount")
  private Double takerFeeDiscount = 0.0d;

  @SerializedName("timestamp")
  private OffsetDateTime timestamp = null;

  public Margin account(Long account) {
    this.account = account;
    return this;
  }

   /**
   * Get account
   * @return account
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getAccount() {
    return account;
  }

  public void setAccount(Long account) {
    this.account = account;
  }

  public Margin currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(required = true, value = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public Margin riskLimit(Long riskLimit) {
    this.riskLimit = riskLimit;
    return this;
  }

   /**
   * Get riskLimit
   * @return riskLimit
  **/
  @ApiModelProperty(value = "")
  public Long getRiskLimit() {
    return riskLimit;
  }

  public void setRiskLimit(Long riskLimit) {
    this.riskLimit = riskLimit;
  }

  public Margin state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(value = "")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public Margin amount(Long amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @ApiModelProperty(value = "")
  public Long getAmount() {
    return amount;
  }

  public void setAmount(Long amount) {
    this.amount = amount;
  }

  public Margin prevRealisedPnl(Long prevRealisedPnl) {
    this.prevRealisedPnl = prevRealisedPnl;
    return this;
  }

   /**
   * Get prevRealisedPnl
   * @return prevRealisedPnl
  **/
  @ApiModelProperty(value = "")
  public Long getPrevRealisedPnl() {
    return prevRealisedPnl;
  }

  public void setPrevRealisedPnl(Long prevRealisedPnl) {
    this.prevRealisedPnl = prevRealisedPnl;
  }

  public Margin grossComm(Long grossComm) {
    this.grossComm = grossComm;
    return this;
  }

   /**
   * Get grossComm
   * @return grossComm
  **/
  @ApiModelProperty(value = "")
  public Long getGrossComm() {
    return grossComm;
  }

  public void setGrossComm(Long grossComm) {
    this.grossComm = grossComm;
  }

  public Margin grossOpenCost(Long grossOpenCost) {
    this.grossOpenCost = grossOpenCost;
    return this;
  }

   /**
   * Get grossOpenCost
   * @return grossOpenCost
  **/
  @ApiModelProperty(value = "")
  public Long getGrossOpenCost() {
    return grossOpenCost;
  }

  public void setGrossOpenCost(Long grossOpenCost) {
    this.grossOpenCost = grossOpenCost;
  }

  public Margin grossOpenPremium(Long grossOpenPremium) {
    this.grossOpenPremium = grossOpenPremium;
    return this;
  }

   /**
   * Get grossOpenPremium
   * @return grossOpenPremium
  **/
  @ApiModelProperty(value = "")
  public Long getGrossOpenPremium() {
    return grossOpenPremium;
  }

  public void setGrossOpenPremium(Long grossOpenPremium) {
    this.grossOpenPremium = grossOpenPremium;
  }

  public Margin grossExecCost(Long grossExecCost) {
    this.grossExecCost = grossExecCost;
    return this;
  }

   /**
   * Get grossExecCost
   * @return grossExecCost
  **/
  @ApiModelProperty(value = "")
  public Long getGrossExecCost() {
    return grossExecCost;
  }

  public void setGrossExecCost(Long grossExecCost) {
    this.grossExecCost = grossExecCost;
  }

  public Margin grossMarkValue(Long grossMarkValue) {
    this.grossMarkValue = grossMarkValue;
    return this;
  }

   /**
   * Get grossMarkValue
   * @return grossMarkValue
  **/
  @ApiModelProperty(value = "")
  public Long getGrossMarkValue() {
    return grossMarkValue;
  }

  public void setGrossMarkValue(Long grossMarkValue) {
    this.grossMarkValue = grossMarkValue;
  }

  public Margin riskValue(Long riskValue) {
    this.riskValue = riskValue;
    return this;
  }

   /**
   * Get riskValue
   * @return riskValue
  **/
  @ApiModelProperty(value = "")
  public Long getRiskValue() {
    return riskValue;
  }

  public void setRiskValue(Long riskValue) {
    this.riskValue = riskValue;
  }

  public Margin initMargin(Long initMargin) {
    this.initMargin = initMargin;
    return this;
  }

   /**
   * Get initMargin
   * @return initMargin
  **/
  @ApiModelProperty(value = "")
  public Long getInitMargin() {
    return initMargin;
  }

  public void setInitMargin(Long initMargin) {
    this.initMargin = initMargin;
  }

  public Margin maintMargin(Long maintMargin) {
    this.maintMargin = maintMargin;
    return this;
  }

   /**
   * Get maintMargin
   * @return maintMargin
  **/
  @ApiModelProperty(value = "")
  public Long getMaintMargin() {
    return maintMargin;
  }

  public void setMaintMargin(Long maintMargin) {
    this.maintMargin = maintMargin;
  }

  public Margin targetExcessMargin(Long targetExcessMargin) {
    this.targetExcessMargin = targetExcessMargin;
    return this;
  }

   /**
   * Get targetExcessMargin
   * @return targetExcessMargin
  **/
  @ApiModelProperty(value = "")
  public Long getTargetExcessMargin() {
    return targetExcessMargin;
  }

  public void setTargetExcessMargin(Long targetExcessMargin) {
    this.targetExcessMargin = targetExcessMargin;
  }

  public Margin realisedPnl(Long realisedPnl) {
    this.realisedPnl = realisedPnl;
    return this;
  }

   /**
   * Get realisedPnl
   * @return realisedPnl
  **/
  @ApiModelProperty(value = "")
  public Long getRealisedPnl() {
    return realisedPnl;
  }

  public void setRealisedPnl(Long realisedPnl) {
    this.realisedPnl = realisedPnl;
  }

  public Margin unrealisedPnl(Long unrealisedPnl) {
    this.unrealisedPnl = unrealisedPnl;
    return this;
  }

   /**
   * Get unrealisedPnl
   * @return unrealisedPnl
  **/
  @ApiModelProperty(value = "")
  public Long getUnrealisedPnl() {
    return unrealisedPnl;
  }

  public void setUnrealisedPnl(Long unrealisedPnl) {
    this.unrealisedPnl = unrealisedPnl;
  }

  public Margin walletBalance(Long walletBalance) {
    this.walletBalance = walletBalance;
    return this;
  }

   /**
   * Get walletBalance
   * @return walletBalance
  **/
  @ApiModelProperty(value = "")
  public Long getWalletBalance() {
    return walletBalance;
  }

  public void setWalletBalance(Long walletBalance) {
    this.walletBalance = walletBalance;
  }

  public Margin marginBalance(Long marginBalance) {
    this.marginBalance = marginBalance;
    return this;
  }

   /**
   * Get marginBalance
   * @return marginBalance
  **/
  @ApiModelProperty(value = "")
  public Long getMarginBalance() {
    return marginBalance;
  }

  public void setMarginBalance(Long marginBalance) {
    this.marginBalance = marginBalance;
  }

  public Margin marginLeverage(Double marginLeverage) {
    this.marginLeverage = marginLeverage;
    return this;
  }

   /**
   * Get marginLeverage
   * @return marginLeverage
  **/
  @ApiModelProperty(value = "")
  public Double getMarginLeverage() {
    return marginLeverage;
  }

  public void setMarginLeverage(Double marginLeverage) {
    this.marginLeverage = marginLeverage;
  }

  public Margin marginUsedPcnt(Double marginUsedPcnt) {
    this.marginUsedPcnt = marginUsedPcnt;
    return this;
  }

   /**
   * Get marginUsedPcnt
   * @return marginUsedPcnt
  **/
  @ApiModelProperty(value = "")
  public Double getMarginUsedPcnt() {
    return marginUsedPcnt;
  }

  public void setMarginUsedPcnt(Double marginUsedPcnt) {
    this.marginUsedPcnt = marginUsedPcnt;
  }

  public Margin excessMargin(Long excessMargin) {
    this.excessMargin = excessMargin;
    return this;
  }

   /**
   * Get excessMargin
   * @return excessMargin
  **/
  @ApiModelProperty(value = "")
  public Long getExcessMargin() {
    return excessMargin;
  }

  public void setExcessMargin(Long excessMargin) {
    this.excessMargin = excessMargin;
  }

  public Margin availableMargin(Long availableMargin) {
    this.availableMargin = availableMargin;
    return this;
  }

   /**
   * Get availableMargin
   * @return availableMargin
  **/
  @ApiModelProperty(value = "")
  public Long getAvailableMargin() {
    return availableMargin;
  }

  public void setAvailableMargin(Long availableMargin) {
    this.availableMargin = availableMargin;
  }

  public Margin withdrawableMargin(Long withdrawableMargin) {
    this.withdrawableMargin = withdrawableMargin;
    return this;
  }

   /**
   * Get withdrawableMargin
   * @return withdrawableMargin
  **/
  @ApiModelProperty(value = "")
  public Long getWithdrawableMargin() {
    return withdrawableMargin;
  }

  public void setWithdrawableMargin(Long withdrawableMargin) {
    this.withdrawableMargin = withdrawableMargin;
  }

  public Margin makerFeeDiscount(Double makerFeeDiscount) {
    this.makerFeeDiscount = makerFeeDiscount;
    return this;
  }

   /**
   * Get makerFeeDiscount
   * @return makerFeeDiscount
  **/
  @ApiModelProperty(value = "")
  public Double getMakerFeeDiscount() {
    return makerFeeDiscount;
  }

  public void setMakerFeeDiscount(Double makerFeeDiscount) {
    this.makerFeeDiscount = makerFeeDiscount;
  }

  public Margin takerFeeDiscount(Double takerFeeDiscount) {
    this.takerFeeDiscount = takerFeeDiscount;
    return this;
  }

   /**
   * Get takerFeeDiscount
   * @return takerFeeDiscount
  **/
  @ApiModelProperty(value = "")
  public Double getTakerFeeDiscount() {
    return takerFeeDiscount;
  }

  public void setTakerFeeDiscount(Double takerFeeDiscount) {
    this.takerFeeDiscount = takerFeeDiscount;
  }

  public Margin timestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Margin margin = (Margin) o;
    return Objects.equals(this.account, margin.account) &&
        Objects.equals(this.currency, margin.currency) &&
        Objects.equals(this.riskLimit, margin.riskLimit) &&
        Objects.equals(this.state, margin.state) &&
        Objects.equals(this.amount, margin.amount) &&
        Objects.equals(this.prevRealisedPnl, margin.prevRealisedPnl) &&
        Objects.equals(this.grossComm, margin.grossComm) &&
        Objects.equals(this.grossOpenCost, margin.grossOpenCost) &&
        Objects.equals(this.grossOpenPremium, margin.grossOpenPremium) &&
        Objects.equals(this.grossExecCost, margin.grossExecCost) &&
        Objects.equals(this.grossMarkValue, margin.grossMarkValue) &&
        Objects.equals(this.riskValue, margin.riskValue) &&
        Objects.equals(this.initMargin, margin.initMargin) &&
        Objects.equals(this.maintMargin, margin.maintMargin) &&
        Objects.equals(this.targetExcessMargin, margin.targetExcessMargin) &&
        Objects.equals(this.realisedPnl, margin.realisedPnl) &&
        Objects.equals(this.unrealisedPnl, margin.unrealisedPnl) &&
        Objects.equals(this.walletBalance, margin.walletBalance) &&
        Objects.equals(this.marginBalance, margin.marginBalance) &&
        Objects.equals(this.marginLeverage, margin.marginLeverage) &&
        Objects.equals(this.marginUsedPcnt, margin.marginUsedPcnt) &&
        Objects.equals(this.excessMargin, margin.excessMargin) &&
        Objects.equals(this.availableMargin, margin.availableMargin) &&
        Objects.equals(this.withdrawableMargin, margin.withdrawableMargin) &&
        Objects.equals(this.makerFeeDiscount, margin.makerFeeDiscount) &&
        Objects.equals(this.takerFeeDiscount, margin.takerFeeDiscount) &&
        Objects.equals(this.timestamp, margin.timestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(account, currency, riskLimit, state, amount, prevRealisedPnl, grossComm, grossOpenCost, grossOpenPremium, grossExecCost, grossMarkValue, riskValue, initMargin, maintMargin, targetExcessMargin, realisedPnl, unrealisedPnl, walletBalance, marginBalance, marginLeverage, marginUsedPcnt, excessMargin, availableMargin, withdrawableMargin, makerFeeDiscount, takerFeeDiscount, timestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Margin {\n");
    
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    riskLimit: ").append(toIndentedString(riskLimit)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    prevRealisedPnl: ").append(toIndentedString(prevRealisedPnl)).append("\n");
    sb.append("    grossComm: ").append(toIndentedString(grossComm)).append("\n");
    sb.append("    grossOpenCost: ").append(toIndentedString(grossOpenCost)).append("\n");
    sb.append("    grossOpenPremium: ").append(toIndentedString(grossOpenPremium)).append("\n");
    sb.append("    grossExecCost: ").append(toIndentedString(grossExecCost)).append("\n");
    sb.append("    grossMarkValue: ").append(toIndentedString(grossMarkValue)).append("\n");
    sb.append("    riskValue: ").append(toIndentedString(riskValue)).append("\n");
    sb.append("    initMargin: ").append(toIndentedString(initMargin)).append("\n");
    sb.append("    maintMargin: ").append(toIndentedString(maintMargin)).append("\n");
    sb.append("    targetExcessMargin: ").append(toIndentedString(targetExcessMargin)).append("\n");
    sb.append("    realisedPnl: ").append(toIndentedString(realisedPnl)).append("\n");
    sb.append("    unrealisedPnl: ").append(toIndentedString(unrealisedPnl)).append("\n");
    sb.append("    walletBalance: ").append(toIndentedString(walletBalance)).append("\n");
    sb.append("    marginBalance: ").append(toIndentedString(marginBalance)).append("\n");
    sb.append("    marginLeverage: ").append(toIndentedString(marginLeverage)).append("\n");
    sb.append("    marginUsedPcnt: ").append(toIndentedString(marginUsedPcnt)).append("\n");
    sb.append("    excessMargin: ").append(toIndentedString(excessMargin)).append("\n");
    sb.append("    availableMargin: ").append(toIndentedString(availableMargin)).append("\n");
    sb.append("    withdrawableMargin: ").append(toIndentedString(withdrawableMargin)).append("\n");
    sb.append("    makerFeeDiscount: ").append(toIndentedString(makerFeeDiscount)).append("\n");
    sb.append("    takerFeeDiscount: ").append(toIndentedString(takerFeeDiscount)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

